!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.FFmpegWASM=t():e.FFmpegWASM=t()}(self,(()=>(()=>{"use strict";var e={252:(e,t,s)=>{e.exports=s.p+"fe6f95c8467dfeab3fe1.js"}},t={};function s(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={exports:{}};return e[r](o,o.exports,s),o.exports}s.m=e,s.d=(e,t)=>{for(var r in t)s.o(t,r)&&!s.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},s.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;s.g.importScripts&&(e=s.g.location+"");var t=s.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");if(r.length)for(var a=r.length-1;a>-1&&!e;)e=r[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),s.p=e})(),s.b=document.baseURI||self.location.href;var r={};return(()=>{var e;s.r(r),s.d(r,{FFmpeg:()=>i}),function(e){e.LOAD="LOAD",e.EXEC="EXEC",e.WRITE_FILE="WRITE_FILE",e.READ_FILE="READ_FILE",e.DELETE_FILE="DELETE_FILE",e.RENAME="RENAME",e.CREATE_DIR="CREATE_DIR",e.LIST_DIR="LIST_DIR",e.DELETE_DIR="DELETE_DIR",e.ERROR="ERROR",e.DOWNLOAD="DOWNLOAD",e.PROGRESS="PROGRESS",e.LOG="LOG",e.MOUNT="MOUNT",e.UNMOUNT="UNMOUNT"}(e||(e={}));const t=(()=>{let e=0;return()=>e++})(),a=(new Error("unknown message type"),new Error("ffmpeg is not loaded, call `await ffmpeg.load()` first")),o=new Error("called FFmpeg.terminate()");new Error("failed to import ffmpeg-core.js");class i{#e=null;#t={};#s={};#r=[];#a=[];loaded=!1;#o=()=>{this.#e&&(this.#e.onmessage=({data:{id:t,type:s,data:r}})=>{switch(s){case e.LOAD:this.loaded=!0,this.#t[t](r);break;case e.MOUNT:case e.UNMOUNT:case e.EXEC:case e.WRITE_FILE:case e.READ_FILE:case e.DELETE_FILE:case e.RENAME:case e.CREATE_DIR:case e.LIST_DIR:case e.DELETE_DIR:this.#t[t](r);break;case e.LOG:this.#r.forEach((e=>e(r)));break;case e.PROGRESS:this.#a.forEach((e=>e(r)));break;case e.ERROR:this.#s[t](r)}delete this.#t[t],delete this.#s[t]})};#i=({type:e,data:s},r=[],o)=>this.#e?new Promise(((a,i)=>{const n=t();this.#e&&this.#e.postMessage({id:n,type:e,data:s},r),this.#t[n]=a,this.#s[n]=i,o?.addEventListener("abort",(()=>{i(new DOMException(`Message # ${n} was aborted`,"AbortError"))}),{once:!0})})):Promise.reject(a);on(e,t){"log"===e?this.#r.push(t):"progress"===e&&this.#a.push(t)}off(e,t){"log"===e?this.#r=this.#r.filter((e=>e!==t)):"progress"===e&&(this.#a=this.#a.filter((e=>e!==t)))}load=(t={},{signal:r}={})=>(this.#e||(this.#e=new Worker(t.workerURL??new URL(s(252),s.b),{type:"module"}),this.#o()),this.#i({type:e.LOAD,data:t},void 0,r));exec=(t,s=-1,{signal:r}={})=>this.#i({type:e.EXEC,data:{args:t,timeout:s}},void 0,r);terminate=()=>{const e=Object.keys(this.#s);for(const t of e)this.#s[t](o),delete this.#s[t],delete this.#t[t];this.#e&&(this.#e.terminate(),this.#e=null,this.loaded=!1)};writeFile=(t,s,{signal:r}={})=>{const a=[];return s instanceof Uint8Array&&a.push(s.buffer),this.#i({type:e.WRITE_FILE,data:{path:t,data:s}},a,r)};mount=(t,s,r)=>this.#i({type:e.MOUNT,data:{fsType:t,options:s,mountPoint:r}},[]);unmount=t=>this.#i({type:e.UNMOUNT,data:{mountPoint:t}},[]);readFile=(t,s="binary",{signal:r}={})=>this.#i({type:e.READ_FILE,data:{path:t,encoding:s}},void 0,r);deleteFile=(t,{signal:s}={})=>this.#i({type:e.DELETE_FILE,data:{path:t}},void 0,s);rename=(t,s,{signal:r}={})=>this.#i({type:e.RENAME,data:{oldPath:t,newPath:s}},void 0,r);createDir=(t,{signal:s}={})=>this.#i({type:e.CREATE_DIR,data:{path:t}},void 0,s);listDir=(t,{signal:s}={})=>this.#i({type:e.LIST_DIR,data:{path:t}},void 0,s);deleteDir=(t,{signal:s}={})=>this.#i({type:e.DELETE_DIR,data:{path:t}},void 0,s)}})(),r})()));
//# sourceMappingURL=ffmpeg.js.map